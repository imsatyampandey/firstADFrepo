{
	"name": "incrementalLoadTask",
	"properties": {
		"activities": [
			{
				"name": "lookup old watermark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT waterMarkVal\nFROM [dbo].[WaterMark]\nWHERE tableName = '@{pipeline().parameters.finalTableName}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "watermarkTable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "lookup New watermark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT max(@{pipeline().parameters.waterMarkCol}) as NewWaterMarkVal from @{pipeline().parameters.srcTableName}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "onPremSourceTable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy data to staging",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "lookup old watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "lookup New watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from @{pipeline().parameters.srcTableName}\nwhere @{pipeline().parameters.waterMarkCol} > \n'@{activity('lookup old watermark').output.firstRow.waterMarkVal}' \nand @{pipeline().parameters.waterMarkCol} <= \n'@{activity('lookup New watermark').output.firstRow.NewwaterMarkVal}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "truncate table @{pipeline().parameters.stgTableName}",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							},
							"path": "imp/log"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "onPremSourceTable",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlStagingtabl",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "merge data from stage to target",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data to staging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_upsert_student]"
				},
				"linkedServiceName": {
					"referenceName": "satyamDB2",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "update watermark table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "merge data from stage to target",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_Updatewatermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@activity('lookup New watermark').output.firstRow.NewWaterMarkVal",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@pipeline().parameters.finalTableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "satyamDB2",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"finalTableName": {
				"type": "string",
				"defaultValue": "Student"
			},
			"srcTableName": {
				"type": "string",
				"defaultValue": "Student"
			},
			"waterMarkCol": {
				"type": "string",
				"defaultValue": "updateDate"
			},
			"stgTableName": {
				"type": "string",
				"defaultValue": "stgStudent"
			},
			"storedProcUpsert": {
				"type": "string",
				"defaultValue": "sp_upsert_student"
			},
			"storedProcWaterMark": {
				"type": "string",
				"defaultValue": "sp_Updatewatermark"
			}
		},
		"folder": {
			"name": "Task adf 101"
		},
		"annotations": []
	}
}